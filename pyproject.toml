[build-system]
requires = [
	"flit_core >=3.8,<4",
	"snakeoil~=0.10.7",
]
build-backend = "py_build"
backend-path = ["."]

[project]
name = "pkgcore"
description = "package managing framework"
readme = "README.rst"
license = {file = "LICENSE"}
requires-python = "~=3.10"
# alphabetical order.
authors = [
	{name = "Michał Górny", email = "mgorny@gentoo.org"},
	{name = "Tim Harder", email = "radhermit@gmail.com"},
	{name = "Brian Harring", email = "ferringb@gmail.com"},
	{name = "Arthur Zamarin", email = "arthurzam@gentoo.org"},
	{name = "Marien Zwart"},
]
maintainers = [
	{name = "Arthur Zamarin", email = "arthurzam@gentoo.org"},
]
classifiers = [
	"License :: OSI Approved :: BSD License",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
]
dynamic = ["version"]

dependencies = [
	"snakeoil~=0.10.7",
	"lxml",
]

[project.optional-dependencies]
test = [
	"pytest>=6.0",
	"pytest-cov",
]
doc = [
	"sphinx",
	"tomli; python_version < '3.11'"
]
formatter = [
	"black ~= 24.1"
]

[project.urls]
Homepage = "https://github.com/pkgcore/pkgcore"
Documentation = "https://pkgcore.github.io/pkgcore/"
Source = "https://github.com/pkgcore/pkgcore"

[project.scripts]
patom = "pkgcore.scripts.__init__:main"
pclean = "pkgcore.scripts.__init__:main"
pclonecache = "pkgcore.scripts.__init__:main"
pconfig = "pkgcore.scripts.__init__:main"
pebuild = "pkgcore.scripts.__init__:main"
pinspect = "pkgcore.scripts.__init__:main"
pmaint = "pkgcore.scripts.__init__:main"
pmerge = "pkgcore.scripts.__init__:main"
pplugincache = "pkgcore.scripts.__init__:main"
pquery = "pkgcore.scripts.__init__:main"

[tool.flit.external-data]
directory = "data"

[tool.flit.sdist]
include = [
	"tox.ini", ".coveragerc", "Makefile", "py_build.py",
	"NEWS.rst", "doc", "tests", "examples", "bin",
	"build/sphinx/man/*.1", "build/sphinx/man/*.5",
]
exclude = [
	".github/", ".gitignore",
	"doc/api/", "doc/generated/",
]

[project.entry-points.pytest11]
pkgcore = "pkgcore.pytest.plugin"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv -ra -l"
testpaths = ["tests"]
markers = [
	"net: tests that require network access (must enable --network option to run)",
]
